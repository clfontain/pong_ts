{"ast":null,"code":"export function PaddleCollision(ball, paddle) {\n  if (ball.x < paddle.x + paddle.width)\n    /*&& \n    \t\tball.x > paddle.x && \n    \t\tpaddle.y < paddle.y + paddle.height)/* &&\n    \t\tball.y + ball.rad > paddle.y - paddle.height / 2\n    \t)*/\n    {\n      ball.dx = 25;\n      /*let collidePoint:number = ball.x - (paddle.x + paddle.width / 2)\n      collidePoint = collidePoint / (paddle.width / 2);\n      let angle:number = (collidePoint * Math.PI) / 3;\n      ball.dx = ball.speed * Math.sin(angle);\n      ball.dy = -ball.speed * Math.cos(angle);*/\n    }\n}\n_c = PaddleCollision;\nvar _c;\n$RefreshReg$(_c, \"PaddleCollision\");","map":{"version":3,"names":["PaddleCollision","ball","paddle","x","width","dx","_c","$RefreshReg$"],"sources":["/home/cfontain/documents/transcendance_github/pong_ts/src/PaddleCollision.tsx"],"sourcesContent":["import { getByPlaceholderText } from \"@testing-library/react\";\nimport ballObj from \"./data/ballObj\";\nimport {Paddle} from \"./Paddle\";\n\nexport function PaddleCollision(ball:ballObj, paddle:Paddle)\n{\n\tif ( \tball.x < paddle.x + paddle.width)\n\t/*&& \n\t\t\tball.x > paddle.x && \n\t\t\tpaddle.y < paddle.y + paddle.height)/* &&\n\t\t\tball.y + ball.rad > paddle.y - paddle.height / 2\n\t\t)*/\n\t{\n\t\tball.dx = 25;\n\t\t/*let collidePoint:number = ball.x - (paddle.x + paddle.width / 2)\n\t\tcollidePoint = collidePoint / (paddle.width / 2);\n\t\tlet angle:number = (collidePoint * Math.PI) / 3;\n\t\tball.dx = ball.speed * Math.sin(angle);\n\t\tball.dy = -ball.speed * Math.cos(angle);*/\n\t}\n}\n"],"mappings":"AAIA,OAAO,SAASA,eAAeA,CAACC,IAAY,EAAEC,MAAa,EAC3D;EACC,IAAMD,IAAI,CAACE,CAAC,GAAGD,MAAM,CAACC,CAAC,GAAGD,MAAM,CAACE,KAAK;IACtC;AACD;AACA;AACA;AACA;IACC;MACCH,IAAI,CAACI,EAAE,GAAG,EAAE;MACZ;AACF;AACA;AACA;AACA;IACC;AACD;AAACC,EAAA,GAhBeN,eAAe;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}